{"ast":null,"code":"var _jsxFileName = \"D:\\\\thiag\\\\Documents\\\\wiki-repositorios\\\\src\\\\pages\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport { useState } from 'react';\nimport { BlocoRepositorio } from '../../components/BlocoRepositorio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [repo, setRepo] = useState();\n  const [autor, setAutor] = useState();\n  const [resultados, setResultados] = useState([]);\n  const handleClick = async () => {\n    const dataRequest = await fetch(`https://api.github.com/repos/${autor}/${repo}`);\n    if (dataRequest.status === 404) return alert('Error 404: Repositório não encontrado');\n    const {\n      description,\n      id\n    } = await dataRequest.json();\n    const testeRepoRepetido = resultados.map(element => {\n      if (element.id === id) {\n        return false;\n      }\n      return true;\n    });\n    if (testeRepoRepetido.some(e => e === false)) return alert('Repositório já adicionado');\n    setResultados(prev => [...prev, {\n      autor,\n      repo,\n      description,\n      id\n    }]);\n  };\n  console.log(resultados);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-pesquisa\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Autor\",\n        className: \"input\",\n        onChange: event => {\n          setAutor(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Reposit\\xF3rio\",\n        className: \"input\",\n        onChange: event => {\n          setRepo(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"botao\",\n        onClick: handleClick,\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-repositorios\",\n      children: resultados.map(element => {\n        return /*#__PURE__*/_jsxDEV(BlocoRepositorio, {\n          nome: element.repo,\n          descricao: element.description,\n          autor: element.autor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"MqOo5gE3IJMxyu/QeypZ+NbJL0g=\");\n_c = Home;\nexport { Home };\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","BlocoRepositorio","jsxDEV","_jsxDEV","Home","_s","repo","setRepo","autor","setAutor","resultados","setResultados","handleClick","dataRequest","fetch","status","alert","description","id","json","testeRepoRepetido","map","element","some","e","prev","console","log","className","children","type","placeholder","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","nome","descricao","_c","$RefreshReg$"],"sources":["D:/thiag/Documents/wiki-repositorios/src/pages/Home/index.jsx"],"sourcesContent":["import './styles.css'\r\nimport { useState } from 'react'\r\nimport { BlocoRepositorio } from '../../components/BlocoRepositorio'\r\n\r\nconst Home = () => {\r\n    const [repo, setRepo] = useState()\r\n    const [autor, setAutor] = useState()\r\n    const [resultados, setResultados] = useState([])\r\n\r\n    const handleClick = async () => {\r\n        const dataRequest = await fetch(`https://api.github.com/repos/${autor}/${repo}`)\r\n        if(dataRequest.status === 404) return alert('Error 404: Repositório não encontrado')\r\n\r\n        const {description, id} = await dataRequest.json()\r\n        \r\n        const testeRepoRepetido = resultados.map(element => { \r\n            if(element.id === id) { \r\n                return false \r\n            }\r\n            return true\r\n        })\r\n        if(testeRepoRepetido.some(e => e === false)) return alert('Repositório já adicionado')\r\n        \r\n\r\n        setResultados(prev => [...prev, {autor, repo, description, id}])\r\n        \r\n    }\r\n\r\n    console.log(resultados)\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"container-pesquisa\">\r\n                <input type=\"text\" placeholder=\"Autor\" className=\"input\" onChange={(event) => {\r\n                    setAutor(event.target.value)\r\n                }}/>\r\n                <input type=\"text\" placeholder=\"Repositório\" className=\"input\" onChange={(event) => {\r\n                    setRepo(event.target.value)\r\n                }}/>\r\n                <button className='botao' onClick={handleClick}>Adicionar</button>\r\n            </div>\r\n            \r\n            <div className='container-repositorios'>\r\n                {resultados.map(element => {\r\n                    return <BlocoRepositorio nome={element.repo} descricao={element.description} autor={element.autor}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Home }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}